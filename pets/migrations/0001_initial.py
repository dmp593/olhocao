# Generated by Django 5.2 on 2025-04-23 22:09

import django.db.models.deletion
import pets.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PetSpecies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='The species name of the pet', max_length=100, unique=True, verbose_name='name')),
                ('name_en', models.CharField(db_index=True, help_text='The species name of the pet', max_length=100, null=True, unique=True, verbose_name='name')),
                ('name_pt', models.CharField(db_index=True, help_text='The species name of the pet', max_length=100, null=True, unique=True, verbose_name='name')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the pet species is active in the system or not', verbose_name='is active')),
            ],
            options={
                'verbose_name': 'Pet Species',
                'verbose_name_plural': 'Pet Species',
            },
        ),
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('breed', models.CharField(default='Mixed Breed', help_text='The breed of the pet', max_length=100, verbose_name='breed')),
                ('gender', models.CharField(choices=[('M', 'male'), ('F', 'female')], help_text='The gender of the pet', max_length=10, verbose_name='gender')),
                ('name', models.CharField(help_text='The name of the pet', max_length=100, verbose_name='name')),
                ('birthdate', models.DateField(help_text='The birthdate of the pet', verbose_name='birthdate')),
                ('weight_kg', models.DecimalField(blank=True, decimal_places=2, help_text='The weight of the pet in kilograms', max_digits=5, null=True, verbose_name='weight (kg)')),
                ('height_cm', models.DecimalField(blank=True, decimal_places=2, help_text='The weight of the pet in centimeters', max_digits=5, null=True, verbose_name='weight (cm)')),
                ('microship_number', models.CharField(blank=True, help_text='The microchip number of the pet', max_length=15, verbose_name='microchip number')),
                ('photo', models.ImageField(blank=True, help_text='The photo of the pet', upload_to=pets.models.pet_photo_upload_to, verbose_name='photo')),
                ('is_sterilized', models.BooleanField(default=False, help_text='Whether the pet is sterilized or not', verbose_name='is sterilized')),
                ('is_vaccinated', models.BooleanField(default=False, help_text='Whether the pet is vaccinated or not', verbose_name='is vaccinated')),
                ('is_allergic', models.BooleanField(default=False, help_text='Whether the pet is allergic or not', verbose_name='is allergic')),
                ('is_medicated', models.BooleanField(default=False, help_text='Whether the pet is medicated or not', verbose_name='is medicated')),
                ('medication', models.TextField(blank=True, help_text='Medication of the pet', verbose_name='medication')),
                ('allergies', models.TextField(blank=True, help_text='Allergies of the pet', verbose_name='allergies')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the pet', verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the pet was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the pet was last updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='The date and time when the pet was deleted', null=True, verbose_name='deleted at')),
                ('owner', models.ForeignKey(help_text='The owner of the pet', on_delete=django.db.models.deletion.CASCADE, related_name='pets', related_query_name='pet', to='accounts.account', verbose_name='owner')),
                ('species', models.ForeignKey(help_text='The species of the pet', on_delete=django.db.models.deletion.PROTECT, related_name='pets', related_query_name='pet', to='pets.petspecies', verbose_name='species')),
            ],
        ),
    ]
